{"version":3,"sources":["styled/Header.styled.ts","components/Header.tsx","styled/Body.styled.ts","components/CvForm.tsx","components/CvResult.tsx","components/Body.tsx","styled/Footer.styled.ts","components/Footer.tsx","App.tsx","index.tsx"],"names":["HeaderWrapper","styled","div","Title","h2","Subtitle","h4","Header","className","BodyWrapper","main","Form","form","SectionName","span","CVContainer","Item","CvForm","handleInputChange","handleResetBtn","handleCreateCVBtn","type","name","value","placeholder","autoComplete","onChange","required","email","phone","school","id","defaultValue","degree","disabled","company","position","tasks","onClick","CvResult","handleDownload","graduation","initialState","Body","useState","setForm","submitCV","setSubmitCV","e","field","target","fieldValue","prevState","preventDefault","htmlToImage","document","getElementById","then","dataUrl","download","catch","err","console","error","FooterWrapper","footer","Footer","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1eec35ef.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 3rem;\n  color: #f4f4f4;\n  background-color: #1a1a1a;\n`;\n\nexport const Title = styled.h2`\n  font-size: 2rem;\n  padding-bottom: 0.7rem;\n  border-bottom: 3px solid teal;\n`;\n\nexport const Subtitle = styled.h4`\n  margin-top: 2rem;\n`;\n","import { HeaderWrapper, Subtitle, Title } from \"../styled/Header.styled\";\n\nconst Header = () => {\n  return (\n    <HeaderWrapper className=\"header\">\n      <Title>Create Your CV ðŸ“„</Title>\n      <Subtitle>\n        Fill the form below to create your own CV. You can edit it or download it.\n      </Subtitle>\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const BodyWrapper = styled.main`\n  border: 6px solid teal;\n  border-radius: 5px;\n  margin: 2rem 4rem;\n  display: flex;\n  flex-direction: column;\n  button {\n    cursor: pointer;\n    font-size: 1rem;\n    padding: 0.7rem;\n    background-color: teal;\n    color: #f4f4f4;\n    border: transparent;\n    border-radius: 5px;\n    margin: 0 6rem 2rem 6rem;\n  }\n`;\n\n// * FORM\n\nexport const Form = styled.form`\n  padding: 1rem 4rem;\n  border-bottom: 2px dotted teal;\n\n  section {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    .section__span {\n      font-weight: bold;\n      margin-bottom: 5px;\n    }\n\n    input {\n      width: 40rem;\n      height: 2rem;\n      padding: 1rem;\n      margin-bottom: 1rem;\n      border: 0.16rem transparent;\n      border-radius: 5px;\n    }\n\n    input:focus {\n      outline: none !important;\n      border: 0.16rem solid teal;\n    }\n\n    textarea {\n      width: 40rem;\n      border: 0.16rem transparent;\n      border-radius: 5px;\n      font-size: 1rem;\n      padding: 1rem;\n    }\n\n    textarea:focus {\n      outline: none !important;\n      border: 0.16rem solid teal;\n    }\n\n    .degree-select {\n      span {\n        margin-right: 0.5rem;\n        font-family: 'Comfortaa';\n      }\n      select {\n        width: 40rem;\n        height: 2rem;\n        padding: 1rem;\n        margin-bottom: 1rem;\n        border: 0.16rem transparent;\n        border-radius: 5px;\n        padding: 0.2rem;\n      }\n\n      select:focus {\n        outline: none !important;\n        border: 0.16rem solid teal;\n      }\n    }\n  }\n\n  .btn-container {\n    display: flex;\n    justify-content: space-evenly;\n    margin-top: 1rem;\n\n    button {\n      cursor: pointer;\n      font-size: 1rem;\n      padding: 0.7rem;\n      background-color: teal;\n      color: #f4f4f4;\n      border: transparent;\n      border-radius: 5px;\n    }\n\n    .btn-reset {\n      background-color: #1a1a1a;\n    }\n  }\n`;\n\nexport const SectionName = styled.span`\n  font-family: 'Comfortaa';\n  color: #f4f4f4;\n  padding: 0.2rem 1rem;\n  margin: 0.5rem 0;\n  background-color: teal;\n  border-radius: 5px;\n`;\n\n// * CV OUTPUT\nexport const CVContainer = styled.div`\n  border: 2px solid #1a1a1a;\n  margin: 2rem auto;\n  padding: 5rem;\n  background-color: #ffff;\n  min-width: 800px;\n  max-height: 900px;\n  max-width: 800px;\n  min-height: 900px;\n\n  header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding-bottom: 1.6rem;\n    border-bottom: 2px solid #1a1a1a;\n    margin-bottom: 6rem;\n\n    h3 {\n      font-size: 1.6rem;\n    }\n\n    div {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n\n      .email {\n        margin-bottom: 0.7rem;\n      }\n\n      p {\n        font-size: 1.26rem;\n      }\n    }\n  }\n\n  section {\n    margin-bottom: 6rem;\n    h4 {\n      font-size: 1rem;\n      font-weight: bold;\n      padding-bottom: 0.4rem;\n      margin-bottom: 1rem;\n      border-bottom: 1px solid #707070;\n    }\n  }\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 1.6rem;\n\n  strong {\n    font-size: 1.3rem;\n    margin-right: 1.2rem;\n  }\n\n  p {\n    font-size: 1.33rem;\n  }\n`;\n","import { ChangeEventHandler, MouseEventHandler } from 'react';\n\nimport { FormType } from './Body';\n\nimport { Form, SectionName } from '../styled/Body.styled';\n\ninterface Props {\n  handleInputChange: ChangeEventHandler<\n    HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\n  >;\n  handleResetBtn: MouseEventHandler<HTMLButtonElement>;\n  handleCreateCVBtn: MouseEventHandler<HTMLButtonElement>;\n  form: FormType;\n}\n\nconst CvForm = ({\n  handleInputChange,\n  handleResetBtn,\n  handleCreateCVBtn,\n  form,\n}: Props) => {\n  return (\n    <Form>\n      <section>\n        <SectionName>General Information</SectionName>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={form.name}\n          placeholder=\"Name\"\n          autoComplete=\"off\"\n          onChange={handleInputChange}\n          required={true}\n        />\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={form.email}\n          placeholder=\"Email\"\n          autoComplete=\"off\"\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"number\"\n          name=\"phone\"\n          value={form.phone}\n          placeholder=\"Phone Number\"\n          autoComplete=\"off\"\n          onChange={handleInputChange}\n        />\n      </section>\n\n      <section>\n        <SectionName>Educational Experience</SectionName>\n        <input\n          type=\"text\"\n          name=\"school\"\n          value={form.school}\n          placeholder=\"School/University Name\"\n          autoComplete=\"off\"\n          onChange={handleInputChange}\n        />\n        <div className=\"degree-select\" key={form.degree}>\n          <select\n            name=\"degree\"\n            id=\"degree\"\n            defaultValue={form.degree}\n            onChange={handleInputChange}>\n            <option value=\"-\" disabled>\n              Select your degree\n            </option>\n            <option value=\"Highschool\">Highschool</option>\n            <option value=\"Bachelor\">Bachelor</option>\n            <option value=\"College\">College</option>\n          </select>\n        </div>\n        <input\n          type=\"number\"\n          name=\"graduation\"\n          placeholder=\"Year of graduation\"\n          onChange={handleInputChange}\n        />\n      </section>\n\n      <section>\n        <SectionName>Practical Experience</SectionName>\n        <input\n          type=\"text\"\n          name=\"company\"\n          value={form.company}\n          placeholder=\"Company Name\"\n          autoComplete=\"off\"\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"text\"\n          name=\"position\"\n          value={form.position}\n          placeholder=\"Position Title\"\n          autoComplete=\"off\"\n          onChange={handleInputChange}\n        />\n        <textarea\n          name=\"tasks\"\n          value={form.tasks}\n          id=\"tasks\"\n          placeholder=\"Describe your main tasks of your job\"\n          onChange={handleInputChange}></textarea>\n      </section>\n\n      <div className=\"btn-container\">\n        <button className=\"btn-reset\" onClick={handleResetBtn}>\n          Reset Fields\n        </button>\n        <button type=\"submit\" onClick={handleCreateCVBtn}>\n          Create Your CV\n        </button>\n      </div>\n    </Form>\n  );\n};\n\nexport default CvForm;\n","import { MouseEventHandler } from 'react';\n\nimport { FormType } from './Body';\n\nimport { CVContainer, Item } from '../styled/Body.styled';\n\ninterface Props {\n  form: FormType;\n  handleDownload: MouseEventHandler<HTMLButtonElement>;\n}\n\nconst CvResult = ({ form, handleDownload }: Props) => {\n  return (\n    <>\n      <div id=\"cv-to-download\">\n        <CVContainer>\n          <header>\n            <h3>{form.name}</h3>\n            <div>\n              <p className=\"email\">{form.email}</p>\n              <p>{form.phone}</p>\n            </div>\n          </header>\n          <section className=\"educational-experience\">\n            <h4>Educational Experience</h4>\n            <Item>\n              <strong>Degree:</strong>\n              <p>{form.degree}</p>\n            </Item>\n            <Item>\n              <strong>Institution Name:</strong>\n              <p>{form.school}</p>\n            </Item>\n            <Item>\n              <strong>Year of graduation:</strong>\n              <p>{form.graduation}</p>\n            </Item>\n          </section>\n          <section className=\"educational-experience\">\n            <h4>Practical Experience</h4>\n            <Item>\n              <strong>Company:</strong>\n              <p>{form.company}</p>\n            </Item>\n            <Item>\n              <strong>Position:</strong>\n              <p>{form.position}</p>\n            </Item>\n            <Item>\n              <strong>Roles:</strong>\n              <p>{form.tasks}</p>\n            </Item>\n          </section>\n        </CVContainer>\n      </div>\n      <button onClick={handleDownload}>\n        <span className=\"btn-download\">Download CV</span>\n      </button>\n    </>\n  );\n};\n\nexport default CvResult;\n","import { useState, ChangeEventHandler, MouseEventHandler } from 'react';\nimport download from 'downloadjs';\nimport * as htmlToImage from 'html-to-image';\n\nimport CvForm from './CvForm';\nimport CvResult from './CvResult';\n\nimport { BodyWrapper } from '../styled/Body.styled';\n\nexport type FormType = {\n  name: string;\n  email: string;\n  phone: string;\n  school: string;\n  degree: string;\n  graduation: string;\n  company: string;\n  position: string;\n  tasks: string;\n};\n\nconst initialState = {\n  name: '',\n  email: '',\n  phone: '',\n  school: '',\n  degree: '-',\n  graduation: '',\n  company: '',\n  position: '',\n  tasks: '',\n};\n\nconst Body = () => {\n  const [form, setForm] = useState(initialState as FormType);\n  const [submitCV, setSubmitCV] = useState(false);\n\n  const handleInputChange: ChangeEventHandler<\n    HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\n  > = (e) => {\n    const field = e.target.name;\n    const fieldValue = e.target.value;\n\n    setForm((prevState) => ({\n      ...prevState,\n      [field]: fieldValue,\n    }));\n  };\n\n  const handleResetBtn: MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.preventDefault();\n    setForm(initialState);\n    setSubmitCV(false);\n  };\n\n  const handleCreateCVBtn: MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.preventDefault();\n    setSubmitCV(true);\n  };\n\n  const handleDownload: MouseEventHandler<HTMLButtonElement> = () => {\n    htmlToImage\n      .toPng(document.getElementById('cv-to-download') as HTMLElement)\n      .then((dataUrl) => {\n        download(dataUrl, 'my-cv.png');\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <BodyWrapper>\n      <CvForm\n        handleInputChange={handleInputChange}\n        handleResetBtn={handleResetBtn}\n        handleCreateCVBtn={handleCreateCVBtn}\n        form={form}\n      />\n      {submitCV && <CvResult form={form} handleDownload={handleDownload} />}\n    </BodyWrapper>\n  );\n};\n\nexport default Body;\n","import styled from 'styled-components';\n\nexport const FooterWrapper = styled.footer`\n  font-family: 'Comfortaa', sans-serif;\n  text-align: center;\n  padding: 3rem;\n  color: #f4f4f4;\n  background-color: #1a1a1a;\n`;\n","import { FooterWrapper } from '../styled/Footer.styled';\n\nconst Footer = () => {\n  return (\n    <FooterWrapper>\n      <p>footer</p>\n    </FooterWrapper>\n  );\n};\n\nexport default Footer;\n","import Header from './components/Header';\nimport Body from './components/Body';\nimport Footer from './components/Footer';\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <Body />\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}